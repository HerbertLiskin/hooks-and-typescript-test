{"version":3,"sources":["UIKit/Input/images/star.svg","helpers/objects.ts","helpers/validation.ts","UIKit/Input/Input.tsx","UIKit/Button/Button.tsx","components/AddMemberForm/AddMemberForm.tsx","components/EditMemberForm/EditMemberForm.tsx","UIKit/Table/Table/Table.tsx","UIKit/Table/Thead/Thead.tsx","UIKit/Table/Tbody/Tbody.tsx","UIKit/Table/Tr/Tr.tsx","UIKit/Table/Td/Td.tsx","components/TeamList/TeamList.tsx","helpers/date.ts","components/AppRoot/AppRoot.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","isEmpty","obj","Object","keys","length","constructor","FORMS_INPUTS","name","type","label","min","max","options","ROLE_MAP","1","2","3","4","FIELDS_ERRORS_MAP","login","password","firstName","lastName","age","formsValidation","teamMember","err","field","fieldValue","test","styled","input","_templateObject7","props","isDisabled","css","_templateObject4","required","_templateObject","star","large","_templateObject3","small","_templateObject2","center","_templateObject5","right","_templateObject6","button","Button_templateObject4","fullWidth","Button_templateObject","Button_templateObject2","disabled","Button_templateObject3","AddMemberForm","initialMemberState","role","isActive","initialFieldsErrors","_useState","useState","_useState2","slicedToArray","setTeamMember","_useState3","_useState4","fieldsErrors","setFieldsErrors","inputChange","e","_e$target","target","value","checked","objectSpread","defineProperty","react_default","a","createElement","className","onSubmit","preventDefault","addTeamMember","map","placeholder","key","concat","onChange","option","react","Input","assign","left","Button","EditMemberForm","useEffect","currentTeamMember","updateTeamMember","table","Table_templateObject","minWidth","thead","Thead_templateObject","tbody","Tbody_templateObject","striped","tr","Tr_templateObject4","isHovering","Tr_templateObject","Tr_templateObject2","Tr_templateObject3","td","_templateObject10","header","_templateObject8","Td_templateObject","Td_templateObject2","Td_templateObject3","Td_templateObject4","Td_templateObject5","Td_templateObject6","Td_templateObject7","maxWidth","_templateObject9","HEADER_TABLE_FIELDS","TeamList","edit","memberId","dataset","setCurrentTeamMember","remove","removeTeamMember","sortBy","fieldName","sortName","teamList","Table","Thead","Tr","Td","sortValue","data-sort-name","onClick","Tbody","member","onlyActive","isActiveClassName","id","timestamp","date","Date","aaaa","getUTCFullYear","gg","getDate","mm","getMonth","toString","cur_day","hours","getHours","minutes","getMinutes","seconds","getSeconds","timestampToDate","registrationDate","data-member-id","AppRoot","alphabetOrder","setAlphabetOrder","_useState5","_useState6","setSortValue","_useState7","_useState8","setOnlyActive","_useState9","_useState10","editForm","setEditForm","storageTeamList","localStorage","getItem","storageAlphabetOrder","storageSortValue","initialTeamList","JSON","parse","initialAlphabetOrder","initialSortValue","currentSortValue","currentAlphabetOrder","currentTeamList","sortTeamList","sort","b","setItem","stringify","components_AddMemberForm_AddMemberForm","newTeamMember","uniqid","now","newTeamList","toConsumableArray","components_EditMemberForm_EditMemberForm","components_TeamList_TeamList","currentTeamMemberId","findIndex","el","filter","Boolean","window","location","hostname","match","ReactDOM","render","components_AppRoot_AppRoot","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa1a54c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.c372e0c9.svg\";","export const isEmpty = (obj: object): boolean => {\n    return Object.keys(obj).length === 0 && obj.constructor === Object\n}\n\nexport const FORMS_INPUTS = [\n    {\n        name: 'login',\n        type: 'text',\n        label: 'Login',\n    },\n    {\n        name: 'password',\n        type: 'password',\n        label: 'Password',\n    },\n    {\n        name: 'firstName',\n        type: 'text',\n        label: 'First Name',\n    },\n    {\n        name: 'lastName',\n        type: 'text',\n        label: 'Last Name',\n    },\n    {\n        name: 'age',\n        type: 'number',\n        label: 'Age',\n        min: 18,\n        max: 65,\n    },\n    {\n        name: 'role',\n        type: 'select',\n        options: ['1', '2', '3', '4'],\n        label: 'Role',\n    },\n    {\n        name: 'isActive',\n        type: 'checkbox',\n        label: 'Active'\n    }\n]\n\nexport const ROLE_MAP: any = {\n    1: 'Team Lead',\n    2: 'Back-end Developer',\n    3: 'Front-end Developer',\n    4: 'DB Developer',\n}","import { TeamMemberModel } from '../types/TeamModel'\n\nexport const FIELDS_ERRORS_MAP: any = {\n    login: 'разрешены только символы a-z, 0-9, _ и -',\n    password: 'строка длиной не менее 6 символов',\n    firstName: 'строка от 3 до 15 символов длиной',\n    lastName: 'строка от 3 до 25 символов длиной',\n    age: 'целое число в диапазоне от 18 до 65',\n}\n\nexport const formsValidation = (teamMember: TeamMemberModel.AddTeamMemberModel) => {\n    const err: any = {}\n    let field: any = ''\n    for (field in teamMember) {\n        const fieldValue = teamMember[field]\n        switch (field) {\n            case 'login':\n                if (!/^[a-zA-Zа-яА-Я0-9-_]+$/.test(fieldValue))\n                    err[field] = FIELDS_ERRORS_MAP[field]\n                break\n\n            case 'firstName':\n                if (fieldValue.length < 3 || fieldValue.length > 15)\n                    err[field] = FIELDS_ERRORS_MAP[field]\n                break\n\n            case 'lastName':\n                if (fieldValue.length < 3 || fieldValue.length > 25)\n                    err[field] = FIELDS_ERRORS_MAP[field]\n                break\n\n            case 'password':\n                if (fieldValue.length < 6)\n                    err[field] = FIELDS_ERRORS_MAP[field]\n                break\n\n            case 'age':\n                if (fieldValue < 18 || fieldValue > 65)\n                    err[field] = FIELDS_ERRORS_MAP[field]\n                break\n\n            default:\n                break\n        }\n    }\n\n    return err\n}","import styled, { css } from 'styled-components'\nimport star from './images/star.svg'\n\ninterface InputModel {\n  required?: boolean\n  small?: boolean\n  large?: boolean\n  isDisabled?: boolean\n  center?: boolean\n  right?: boolean\n}\n\nconst required = (props: InputModel) => props.required && css`\n  background-image: url(${star});\n  background-position: calc(100% - 8px) 50%;\n  background-repeat: no-repeat;\n  padding-right: 23px;\n`\n\nconst small = (props: InputModel) => props.small && css`\n  font-size: 12px;\n  height: 24px;\n  padding: 5px 12px;\n`\n\nconst large = (props: InputModel) => props.large && css`\n  height: 48px;\n`\n\nconst disabled = (props: InputModel) => props.isDisabled && css`\n  color: var(--colorTextButtonDisabled);\n  background-color: var(--backgroundColorButtonDisabled);\n`\n\nconst center = (props: InputModel) => props.center && css`\n  text-align: center;\n`\n\nconst right = (props: InputModel) => props.right && css`\n  text-align: right;\n`\n\n/** @component */\nexport default styled.input`\n  &[type=\"text\"], &[type=\"password\"], &[type=\"number\"] {\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 36px;\n    border-radius: 4px;\n    border: 1px solid #666;\n    padding: 10px 12px;\n    outline: none;\n    transition: border-color .25s;\n    font-size: 14px;\n    color: #666\n\n    :hover {\n      border-color: #999;\n    }\n\n    :focus {\n      border-color: #000;\n    }\n\n    ::placeholder {\n      color: #777;\n    }\n\n    ${disabled}\n    ${required}\n    ${large}\n    ${small}\n    ${center}\n    ${right}\n  }\n`\n","import styled, { css } from 'styled-components'\n\ninterface ButtonModel {\n  fullWidth?: boolean\n  small?: boolean\n  disabled?: boolean\n}\n\nconst fullWidth = (p: ButtonModel) => p.fullWidth && css`\n  width: 100%;\n`\n\nconst small = (p: ButtonModel) => p.small && css`\n  font-size: 12px;\n  padding: 0 15px;\n  height: 36px;\n`\n\nconst disabled = (p: ButtonModel) => p.disabled && css`\n  background-color: grey;\n  pointer-events: none;\n  cursor: initial;\n  color: white;\n`\n\n/** @component */\nexport default styled.button`\n  font-size: 14px;\n  position: relative;\n  height: 40px;\n  padding: 0 40px;\n  overflow: visible;\n  border: none;\n  border-radius: 3px;\n  background-color: blue;\n  text-align: center;\n  color: white;\n  box-shadow: 0;\n  transition: 0.1s ease-in-out all;\n  cursor: pointer;\n\n  ::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  :hover {\n    box-shadow: 0 8px 16px rgba(0, 13, 38, .1);\n  }\n\n  ${fullWidth}\n  ${small}\n  ${disabled}\n`\n","import React, { useState, Fragment } from 'react'\nimport {\n  isEmpty,\n  FORMS_INPUTS,\n  ROLE_MAP,\n} from '../../helpers/objects'\n\nimport { formsValidation } from '../../helpers/validation'\n\nimport Input from '../../UIKit/Input/Input'\nimport Button from '../../UIKit/Button/Button'\n\nimport { TeamMemberModel } from '../../types'\n\nimport './AddMemberForm.css'\n\ninterface Props {\n  addTeamMember: (teamMember: TeamMemberModel.AddTeamMemberModel) => void\n}\n\nconst AddMemberForm: React.FC<Props> = (props) => {\n  const initialMemberState: TeamMemberModel.AddTeamMemberModel = {\n    login: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    age: 18,\n    role: 1,\n    isActive: false,\n  }\n\n  const initialFieldsErrors: TeamMemberModel.TeamMembersFieldsErrorsModel = {\n    login: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    age: '',\n  }\n\n  const [teamMember, setTeamMember] = useState(initialMemberState)\n  const [fieldsErrors, setFieldsErrors] = useState(initialFieldsErrors)\n\n  const inputChange = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>): void => {\n    const { name, value, type } = e.target\n    const checked = e.target.type === 'checkbox'\n      ? (e.target as HTMLInputElement).checked\n      : null\n\n    setTeamMember({ ...teamMember, [name]: type !== 'checkbox' ? value : checked })\n  }\n\n  const addMember = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n\n    const err = formsValidation(teamMember)\n\n    if (isEmpty(err)) {\n      props.addTeamMember(teamMember)\n      setTeamMember(initialMemberState)\n      setFieldsErrors(initialFieldsErrors)\n    } else {\n      setFieldsErrors(err)\n    }\n  }\n\n  return (\n    <form className=\"form\" onSubmit={addMember}>\n      {\n        FORMS_INPUTS.map((input) => {\n          let props: any = {\n            type: input.type,\n            name: input.name,\n            placeholder: input.label,\n            value: teamMember[input.name],\n          }\n\n          if (input.type === 'number') {\n            props.min = input.min\n            props.max = input.max\n          }\n\n          if (input.type !== 'checkbox') {\n            props.value = teamMember[input.name]\n          } else {\n            props.checked = teamMember[input.name]\n          }\n\n          return (\n            <div className=\"formField\" key={`add-form-${input.name}`}>\n              {\n                input.type === 'select'\n                  ? (\n                    <select name={input.name} value={teamMember.role} onChange={inputChange}>\n                      {\n                        input.options && input.options.map((option) => (\n                          <option\n                            key={`add-form-option-${input.name}-${option}`}\n                            value={option}>\n                            {ROLE_MAP[option]}\n                          </option>\n                        ))\n                      }\n                    </select>\n                  )\n                  : (\n                    <Fragment>\n                      <Input\n                        small\n                        left\n                        {...props}\n                        onChange={inputChange}\n                      />\n                      {\n                        input.name === 'isActive' &&\n                          (<label>isActive</label>)\n                      }\n                    </Fragment>\n                  )\n              }\n              <div className=\"error\">{fieldsErrors[input.name]}</div>\n            </div>\n          )\n        })\n      }\n      <Button fullWidth>\n        Add member\n      </Button>\n    </form>\n  )\n}\n\nexport default AddMemberForm\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { isEmpty, FORMS_INPUTS, ROLE_MAP } from '../../helpers/objects'\nimport Input from '../../UIKit/Input/Input'\nimport Button from '../../UIKit/Button/Button'\n\nimport { formsValidation } from '../../helpers/validation'\n\nimport { TeamMemberModel } from '../../types'\n\nimport './EditMemberForm.css'\n\ninterface Props {\n  currentTeamMember: TeamMemberModel | {},\n  updateTeamMember: (teamMember: TeamMemberModel) => void,\n}\n\nconst EditMemberForm: React.FC<Props> = (props) => {\n  //@TODO: I don't know how if it not 'any' type.\n  const initialMemberState: TeamMemberModel | any = {}\n  const [teamMember, setTeamMember] = useState(initialMemberState)\n\n  const initialFieldsErrors: TeamMemberModel.TeamMembersFieldsErrorsModel = {\n    login: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    age: '',\n  }\n  const [fieldsErrors, setFieldsErrors] = useState(initialFieldsErrors)\n  \n  useEffect(() => {\n    setTeamMember(props.currentTeamMember)\n  }, [props])\n\n  const inputChange = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>): void => {\n    const { name, value, type } = e.target\n\n    const checked = e.target.type === 'checkbox'\n      ? (e.target as HTMLInputElement).checked\n      : null\n\n    setTeamMember({ ...teamMember, [name]: type !== 'checkbox' ? value : checked })\n  }\n\n  const updateTeamMember = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n\n    const err = formsValidation(teamMember)\n\n    if (isEmpty(err)) {\n      props.updateTeamMember(teamMember)\n      setTeamMember(initialMemberState)\n      setFieldsErrors(initialFieldsErrors)\n\n    } else {\n      setFieldsErrors(err)\n    }\n    \n  }\n\n  return (\n    <form className='form' onSubmit={updateTeamMember}>\n      {\n        FORMS_INPUTS.map((input) => {\n          let props: any = {\n            type: input.type,\n            name: input.name,\n            placeholder: input.label,\n            value: teamMember[input.name],\n          }\n\n          if (input.type === 'number') {\n            props.min = input.min\n            props.max = input.max\n          }\n\n          if (input.type !== 'checkbox') {\n            props.value = teamMember[input.name]\n          } else {\n            props.checked = teamMember[input.name]\n          }\n\n          return (\n            <div className=\"formField\" key={`add-form-${input.name}`}>\n              {\n                input.type === 'select'\n                  ? (\n                    <select name={input.name} value={teamMember.role} onChange={inputChange}>\n                      {\n                        input.options && input.options.map((option) => (\n                          <option\n                            key={`add-form-option-${input.name}-${option}`}\n                            value={option}\n                          >\n                            {ROLE_MAP[option]}\n                          </option>\n                        ))\n                      }\n                    </select>\n                  )\n                  : (\n                    <Fragment>\n                      <Input\n                        small\n                        left\n                        {...props}\n                        onChange={inputChange}\n                      />\n                      {\n                        input.name === 'isActive' &&\n                        (<label>isActive</label>)\n                      }\n                    </Fragment>\n                  )\n              }\n              <div className=\"error\">{fieldsErrors[input.name]}</div>\n            </div>\n          )\n        })\n      }\n      <Button fullWidth>\n        Edit member\n      </Button>\n    </form>\n  )\n}\n\nexport default EditMemberForm\n","import styled from 'styled-components'\n\ninterface TableModel {\n  minWidth?: string\n}\n\nconst minWidth = (props: TableModel) => props.minWidth && `\n  min-width: ${props.minWidth};\n`\n\n/** @component */\nexport default styled.table`\n  display: block;\n  width: 100%;\n  line-height: 1;\n  opacity: 1;\n  transition: opacity .2s;\n\n  ${minWidth}\n`\n","import styled from 'styled-components'\n\n/** @component */\nexport default styled.thead`\n  font-size: 12px;\n  font-weight: 600;\n  display: block;\n  position: relative;\n  z-index: 1;\n  background: #ece8e8;\n  border-bottom: 1px solid black;\n\n  tr {\n    border: none;\n  }\n`\n","import styled from 'styled-components'\n\ninterface Tbody {\n  striped?: boolean\n}\n\nconst striped = (props: Tbody) => props.striped && `\n  color: #ddd;\n`\n/** @component */\nexport default styled.tbody`\n  display: block;\n  color: var(--colorText);\n\n  & tr:nth-child(2n) {\n    ${striped}\n\n    &:hover {\n      background-color: var(--background-button-active);\n    }\n  }\n`\n","import styled, { css } from 'styled-components'\n\ninterface TrModel {\n  isHovering?: boolean\n  isActive?: boolean\n  isDisabled?: boolean\n}\n\n\nconst isHovering = (props: TrModel) => props.isHovering && css`\n  :hover {\n    border-radius: 4px;\n    border: #edd0d0;\n  }\n`\n\nconst isActive = (props: TrModel) => props.isActive && css`\n  border-radius: 4px;\n\n  td::after {\n    border-right-color: #edd0d0 !important;\n  }\n`\n\nconst isDisabled = (props: TrModel) => props.isDisabled && css`\n  opacity: .4;\n`\n\n/** @component */\nexport default styled.tr`\n  font-size: 12px;\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  align-content: center;\n  align-items: stretch;\n  justify-content: space-between;\n  border-top: 1px solid rgba(255, 255, 255, 0);\n  border-right: 1px solid rgba(255, 255, 255, 0);\n  border-bottom: 1px solid #edd0d0;\n  border-left: 1px solid rgba(255, 255, 255, 0);\n\n  ${isHovering}\n  ${isActive}\n  ${isDisabled}\n`\n","import styled, { css } from 'styled-components'\n\ninterface Tbody {\n  type: string\n  header?: boolean\n  isHovering?: boolean\n  isActive?: boolean\n  maxWidth?: string\n  minWidth?: string\n}\n\nconst small = (props: Tbody) => props.type === 'small' && css`\n  flex: 0 0 50px;\n  justify-content: center;\n  text-align: center;\n`\n\nconst basis = (props: Tbody) => props.type === 'basis' && css`\n  flex: 3 0 0%;\n  justify-content: flex-start;\n  text-align: left;\n  ${props.minWidth ? `min-width: ${props.minWidth}` : ''}\n`\n\nconst left = (props: Tbody) => props.type === 'left' && css`\n  flex: 1 1 0%;\n  justify-content: flex-start;\n  text-align: left;\n  ${props.minWidth ? `min-width: ${props.minWidth}` : ''}\n`\n\nconst right = (props: Tbody) => props.type === 'right' && css`\n  flex: 1 1 0%;\n  justify-content: flex-end;\n  text-align: right;\n  ${props.minWidth ? `min-width: ${props.minWidth}` : ''}\n`\n\nconst center = (props: Tbody) => props.type === 'center' && css`\n  flex: 1 1 0%;\n  justify-content: center;\n  text-align: center;\n  ${props.minWidth ? `min-width: ${props.minWidth}` : ''}\n`\n\nconst isHovering = (props: Tbody) => props.isHovering && css`\n  :hover {\n    background: #d1d1f1;\n  }\n`\n\nconst isActive = (props: Tbody) => props.isActive && css`\n  background: #b1b2fd;\n`\n\nconst header = (props: Tbody) => props.header && css`\n  font-weight: bold;\n  color: var(--font-color);\n  border: none;\n`\n\nconst maxWidth = (props: Tbody) => props.maxWidth && css`\n  max-width: ${props.maxWidth}\n`\n\n/** @component */\nexport default styled.td`\n  display: flex;\n  position: relative;\n  align-items: center;\n  min-height: 32px;\n  padding: 5px 15px;\n\n  &:first-child {\n    padding: 5px 15px 5px 5px;\n  }\n\n  &:last-child {\n    padding: 5px 5px 5px 15px;\n  }\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    width: 1px;\n    height: 40%;\n    right: 0;\n    border-right: 1px solid #edd0d0;;\n  }\n\n  ${header}\n\n  ${small}\n  ${basis}\n  ${left}\n  ${right}\n  ${center}\n\n  ${isHovering}\n  ${isActive}\n\n  ${maxWidth}\n`\n","import React from 'react'\nimport { TeamMemberModel } from '../../types'\nimport { Table, Tbody, Tr, Td, Thead } from '../../UIKit/Table/'\nimport { ROLE_MAP } from '../../helpers/objects'\nimport { timestampToDate } from '../../helpers/date'\n\nimport './TeamList.css'\n\ninterface Props {\n  teamList: TeamMemberModel[],\n  onlyActive: boolean,\n  sortValue: string,\n\n  sortBy: (obj: { sortTeamList?: TeamMemberModel[], name?: string }) => void,\n  setCurrentTeamMember: (id: string | undefined) => void,\n  removeTeamMember: (id: string | undefined) => void,\n}\n\nconst HEADER_TABLE_FIELDS = [\n  { name: 'lastName', type: 'left' },\n  { name: 'login', type: 'left' },\n  { name: 'role', type: 'left' },\n  { name: 'age', type: 'center' },\n  { name: 'registrationDate', type: 'left' },\n  { name: 'isActive', type: 'center' },\n]\n\nconst TeamList: React.FC<Props> = (props) => {\n  const edit = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    e.preventDefault()\n    const memberId = (e.target as HTMLButtonElement).dataset.memberId\n    props.setCurrentTeamMember(memberId)\n  }\n\n  const remove = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    e.preventDefault()\n    const memberId = (e.target as HTMLButtonElement).dataset.memberId\n    props.removeTeamMember(memberId)\n  }\n\n  const sortBy = (e: any): void => {\n    e.preventDefault()\n    const fieldName = e.target.dataset.sortName\n    props.sortBy({ name: fieldName })\n  }\n\n\n  return props.teamList.length ? (\n    <div>\n      <Table>\n        <Thead>\n          <Tr>\n            {HEADER_TABLE_FIELDS.map((field) => (\n              <Td\n                key={`td-${field.name}`}\n                header\n                isActive={props.sortValue === field.name}\n                isHovering\n                type={field.type}\n                data-sort-name={field.name}\n                onClick={sortBy}\n              >\n                {field.name}\n              </Td>\n            ))}\n            <Td header type=\"right\">cntrls</Td>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {\n            props.teamList.map((member: TeamMemberModel) => {\n              if (props.onlyActive && !member.isActive)\n                return null\n\n              const isActiveClassName = `isActive ${member.isActive === true && 'active'}`\n\n              return (\n                <Tr key={member.id}>\n                  <Td type=\"left\">{member.lastName}, {member.firstName}</Td>\n                  <Td type=\"left\">{member.login}</Td>\n                  <Td type=\"left\">{ROLE_MAP[member.role]}</Td>\n                  <Td type=\"center\">{member.age}</Td>\n                  <Td type=\"left\">{timestampToDate(member.registrationDate)}</Td>\n                  <Td type=\"center\" className={isActiveClassName}>{member.isActive ? 'Yes' : 'No'}</Td>\n                  <Td type=\"right\">\n                    <button\n                      data-member-id={member.id}\n                      onClick={edit}\n                    >\n                      Edit\n                  </button>\n                    <button\n                      data-member-id={member.id}\n                      onClick={remove}\n                    >\n                      Delete\n                  </button>\n                  </Td>\n                </Tr>\n              )\n            })\n          }\n        </Tbody>\n      </Table>\n    </div>\n  )\n    : <div className=\"emptyList\">{'Список пуст'}</div>\n}\n\nexport default TeamList;\n","export const timestampToDate = (timestamp: number) => {\n\n    const date = new Date(timestamp);\n    const aaaa = date.getUTCFullYear()\n\n    let gg: string | number = date.getDate()\n    let mm: string | number = (date.getMonth() + 1)\n\n    if (gg < 10)\n        gg = '0' + gg.toString()\n\n    if (mm < 10)\n        mm = 0 + mm.toString()\n\n    const cur_day = aaaa + '-' + mm + '-' + gg;\n\n    let hours: string | number = date.getHours()\n    let minutes: string | number = date.getMinutes()\n    let seconds: string | number = date.getSeconds()\n\n    if (hours < 10)\n        hours = '0' + hours;\n\n    if (minutes < 10)\n        minutes = '0' + minutes;\n\n    if (seconds < 10)\n        seconds = '0' + seconds;\n\n    return cur_day + ' ' + hours + ':' + minutes + ':' + seconds;\n\n}","import React, { useState, useEffect } from 'react'\nimport uniqid from 'uniqid'\nimport { isEmpty } from '../../helpers/objects'\n\nimport AddMemberForm from '../AddMemberForm/AddMemberForm'\nimport EditMemberForm from '../EditMemberForm/EditMemberForm'\nimport TeamList from '../TeamList/TeamList'\n\nimport { TeamMemberModel } from '../../types'\n\nimport './AppRoot.css'\n\nconst AppRoot: React.FC = () => {\n  const defaultTeamList: TeamMemberModel[] = []\n  const [teamList, setTeamMember] = useState(defaultTeamList)\n  const [alphabetOrder, setAlphabetOrder] = useState(true)\n  const [sortValue, setSortValue] = useState('lastName')\n  const [onlyActive, setOnlyActive] = useState(false)\n  const [editForm, setEditForm] = useState({})\n\n  useEffect(() => {\n    const storageTeamList = localStorage.getItem('teamList')\n    const storageAlphabetOrder = localStorage.getItem('alphabetOrder')\n    const storageSortValue = localStorage.getItem('sortValue')\n\n    const initialTeamList = storageTeamList !== null\n      ? JSON.parse(storageTeamList)\n      : []\n\n    const initialAlphabetOrder = storageAlphabetOrder !== null\n      ? JSON.parse(storageAlphabetOrder)\n      : true\n\n    const initialSortValue = storageSortValue !== null\n      ? JSON.parse(storageSortValue)\n      : 'lastName'\n\n    setTeamMember(initialTeamList)\n    setAlphabetOrder(initialAlphabetOrder)\n    setSortValue(initialSortValue)\n  }, [])\n\n  const addTeamMember = (teamMember: TeamMemberModel.AddTeamMemberModel): void => {\n    const newTeamMember: TeamMemberModel = {\n      ...teamMember,\n      id: uniqid(),\n      registrationDate: Date.now()\n    }\n    const newTeamList: TeamMemberModel[] = [...teamList, newTeamMember]\n\n    sortBy({ sortTeamList: newTeamList })\n  }\n\n  const setCurrentTeamMember = (id: string | undefined): void => {\n    const currentTeamMemberId = teamList.findIndex((el) => (el.id === id))\n    setEditForm(teamList[currentTeamMemberId])\n  }\n\n  const updateTeamMember = (teamMember: TeamMemberModel): void => {\n    const newTeamList = teamList.map((member) => {\n      return member.id === teamMember.id ? teamMember : member\n    })\n    sortBy({ sortTeamList: newTeamList })\n    setEditForm({})\n  }\n\n  const removeTeamMember = (id: string | undefined): void => {\n    const newTeamList = teamList.filter((member: TeamMemberModel) => (member.id !== id))\n\n    setTeamMember(newTeamList)\n    localStorage.setItem('teamList', JSON.stringify(newTeamList));\n  }\n\n  const sortBy = (obj: { sortTeamList?: TeamMemberModel[], name?: string }): void => {\n    const currentSortValue: string = obj.name || sortValue\n    const currentAlphabetOrder: boolean = (\n      obj.name &&\n      obj.name === sortValue &&\n      alphabetOrder === true\n    )\n      ? false\n      : true\n    const currentTeamList: TeamMemberModel[] = obj.sortTeamList\n      ? obj.sortTeamList\n      : teamList\n\n    currentTeamList.sort((a: any, b: any): number => {\n      if (a[currentSortValue] > b[currentSortValue])\n        return currentAlphabetOrder ? 1 : -1\n\n      if (a[currentSortValue] < b[currentSortValue])\n        return currentAlphabetOrder ? -1 : 1\n\n      return 0;\n    })\n\n    setTeamMember(currentTeamList)\n    setAlphabetOrder(currentAlphabetOrder)\n\n    if (obj.name)\n      setSortValue(obj.name)\n\n    localStorage.setItem('sortValue', JSON.stringify(currentSortValue));\n    localStorage.setItem('alphabetOrder', JSON.stringify(currentAlphabetOrder));\n    localStorage.setItem('teamList', JSON.stringify(currentTeamList));\n  }\n\n  const toggleActive = () => {\n    setOnlyActive(!onlyActive)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"layout\">\n        <div className=\"forms\">\n          <AddMemberForm addTeamMember={addTeamMember} />\n          {\n            !isEmpty(editForm) &&\n            (\n              <EditMemberForm\n                currentTeamMember={editForm}\n                updateTeamMember={updateTeamMember}\n              />\n            )\n          }\n\n        </div>\n        <div\n          onClick={toggleActive}\n          className=\"onlyActive\"\n        >\n          Only Active: {onlyActive ? 'Yes' : 'No'} (click Me)\n        </div>\n        <TeamList\n          teamList={teamList}\n          onlyActive={onlyActive}\n          setCurrentTeamMember={setCurrentTeamMember}\n          removeTeamMember={removeTeamMember}\n          sortValue={sortValue}\n          sortBy={sortBy}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default AppRoot;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/AppRoot/AppRoot';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}